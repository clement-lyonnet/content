[MODEL: dataset="gatewatcher_gcenter_raw"]
alter xdm.observer.name = observer_hostname,
  xdm.observer.version = observer_version,
  xdm.observer.unique_identifier = observer_uuid,

  /* Mapping event */
  xdm.event.type = "NETWORK",
  xdm.event.original_event_type = event_kind,
  xdm.event.tags = arraycreate(XDM_CONST.EVENT_TAG_NETWORK),
  xdm.event.outcome = XDM_CONST.OUTCOME_UNKNOWN,

  /* Mapping alert */
  xdm.alert.name = sigflow_signature,
  xdm.alert.original_threat_name = sigflow_signature,
  xdm.alert.original_alert_id = to_string(sigflow_signature_id),
  xdm.alert.severity = to_string(event_severity),
  xdm.alert.subcategory = sigflow_category, 

  /* Mapping source (required for stitching) */
  xdm.source.host.mac_addresses = arraycreate(source_mac),
  xdm.source.ipv4 = source_ip,
  xdm.source.port = source_port,
  xdm.source.user_agent = http_http_user_agent,

  /* Mapping destination (required for stitching) */
  xdm.target.host.mac_addresses = arraycreate(destination_mac),
  xdm.target.ipv4 = destination_ip,
  xdm.target.port = destination_port,
  xdm.target.url = http_url,
  xdm.target.domain = if(network_protocol  = "http", http_hostname,  network_protocol = "dns", dns_answers->name),
  
  /* Mapping XDM IP protocol (required for stitching) */
  xdm.network.ip_protocol = if(network_transport ="udp", XDM_CONST.IP_PROTOCOL_UDP, network_transport="tcp", XDM_CONST.IP_PROTOCOL_TCP),

  xdm.network.application_protocol = if(network_protocol = "http", "web-browsing"),

  /* Mapping DNS */
  xdm.network.dns.is_response = to_boolean(dns_qr),
  xdm.network.dns.dns_question.name = dns_answers->name,
  xdm.network.dns.dns_question.type = if(
    dns_answers->type = "A", XDM_CONST.DNS_RECORD_TYPE_A,
    dns_answers->type = "AAAA", XDM_CONST.DNS_RECORD_TYPE_AAAA,
    dns_answers->type = "PTR", XDM_CONST.DNS_RECORD_TYPE_PTR,
    dns_answers->type = "SRV", XDM_CONST.DNS_RECORD_TYPE_SRV,
    dns_answers->type = "MX", XDM_CONST.DNS_RECORD_TYPE_MX),

  /* Mapping HTTP */
  xdm.network.http.domain = http_hostname,
  xdm.network.http.method =  if(
    http_request->method = "ACL", XDM_CONST.HTTP_METHOD_ACL,
    http_request->method = "BASELINE_CONTROL", XDM_CONST.HTTP_METHOD_BASELINE_CONTROL, 
    http_request->method = "BIND", XDM_CONST.HTTP_METHOD_BIND,
    http_request->method = "CHECKIN", XDM_CONST.HTTP_METHOD_CHECKIN,
    http_request->method= "CHECKOUT", XDM_CONST.HTTP_METHOD_CHECKOUT, 
    http_request->method= "CONNECT", XDM_CONST.HTTP_METHOD_CONNECT, 
    http_request->method= "COPY", XDM_CONST.HTTP_METHOD_COPY, 
    http_request->method= "DELETE", XDM_CONST.HTTP_METHOD_DELETE, 
    http_request->method= "GET", XDM_CONST.HTTP_METHOD_GET, 
    http_request->method= "HEAD", XDM_CONST.HTTP_METHOD_HEAD, 
    http_request->method= "LABEL", XDM_CONST.HTTP_METHOD_LABEL, 
    http_request->method= "LINK", XDM_CONST.HTTP_METHOD_LINK, 
    http_request->method= "LOCK", XDM_CONST.HTTP_METHOD_LOCK, 
    http_request->method= "MERGE", XDM_CONST.HTTP_METHOD_MERGE, 
    http_request->method= "MKACTIVITY", XDM_CONST.HTTP_METHOD_MKACTIVITY, 
    http_request->method= "MKCALENDAR", XDM_CONST.HTTP_METHOD_MKCALENDAR, 
    http_request->method= "MKCOL", XDM_CONST.HTTP_METHOD_MKCOL, 
    http_request->method= "MKREDIRECTREF", XDM_CONST.HTTP_METHOD_MKREDIRECTREF, 
    http_request->method= "MKWORKSPACE", XDM_CONST.HTTP_METHOD_MKWORKSPACE, 
    http_request->method= "MOVE", XDM_CONST.HTTP_METHOD_MOVE, 
    http_request->method= "OPTIONS", XDM_CONST.HTTP_METHOD_OPTIONS, 
    http_request->method= "ORDERPATCH", XDM_CONST.HTTP_METHOD_ORDERPATCH, 
    http_request->method= "PATCH", XDM_CONST.HTTP_METHOD_PATCH, 
    http_request->method= "POST", XDM_CONST.HTTP_METHOD_POST, 
    http_request->method= "PRI", XDM_CONST.HTTP_METHOD_PRI, 
    http_request->method= "PROPFIND", XDM_CONST.HTTP_METHOD_PROPFIND, 
    http_request->method= "PROPPATCH", XDM_CONST.HTTP_METHOD_PROPPATCH, 
    http_request->method= "PUT", XDM_CONST.HTTP_METHOD_PUT, 
    http_request->method= "REBIND", XDM_CONST.HTTP_METHOD_REBIND, 
    http_request->method= "REPORT", XDM_CONST.HTTP_METHOD_REPORT, 
    http_request->method= "SEARCH", XDM_CONST.HTTP_METHOD_SEARCH, 
    http_request->method= "TRACE", XDM_CONST.HTTP_METHOD_TRACE, 
    http_request->method= "UNBIND", XDM_CONST.HTTP_METHOD_UNBIND, 
    http_request->method= "UNCHECKOUT", XDM_CONST.HTTP_METHOD_UNCHECKOUT, 
    http_request->method= "UNLINK", XDM_CONST.HTTP_METHOD_UNLINK, 
    http_request->method= "UNLOCK", XDM_CONST.HTTP_METHOD_UNLOCK, 
    http_request->method= "UPDATE", XDM_CONST.HTTP_METHOD_UPDATE, 
    http_request->method= "UPDATEREDIRECTREF", XDM_CONST.HTTP_METHOD_UPDATEREDIRECTREF, 
    http_request->method= "VERSION_CONTROL", XDM_CONST.HTTP_METHOD_VERSION_CONTROL, 
    http_request->method= null, null,
    to_string(http_request->method)),
  xdm.network.http.referrer = http_http_refer,
  xdm.network.http.response_code = http_response->status,
  xdm.network.http.url = http_url,

  /* Mapping TLS */
  xdm.network.tls.protocol_version = tls_version,
  xdm.network.tls.server_certificate.issuer = tls_server->issuer,
  xdm.network.tls.server_certificate.subject = tls_server->subject,
  xdm.network.tls.server_name = coalesce(tls_client->server_name, tls_sni),
  xdm.network.tls.server_ja3 = tls_ja3;