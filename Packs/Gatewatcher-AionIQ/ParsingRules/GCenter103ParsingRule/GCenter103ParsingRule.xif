[INGEST:vendor="Gatewatcher", product="Gcenter", target_dataset="gatewatcher_gcenter_raw", no_hit=drop]
alter json_content = arrayindex(regextract(_raw_log, "({.*})"), 0),
  dns_aa = to_boolean(json_extract_scalar(json_content, "$.dns.aa")),
  dns_answers = json_extract(json_content, "$.dns.answers"),
  dns_authorities = json_extract_array(json_content, "$.dns.authorities"),
  dns_flags = json_extract_scalar(json_content, "$.dns.flags"),
  dns_grouped = json_extract(json_content, "$.dns.grouped"),
  dns_id = to_integer(json_extract_scalar(json_content, "$.dns.id")),
  dns_qr = to_boolean(json_extract_scalar(json_content, "$.dns.qr")),
  dns_query = json_extract(json_content, "$.dns.query"),
  dns_ra = to_boolean(json_extract_scalar(json_content, "$.dns.ra")),
  dns_rd = to_boolean(json_extract_scalar(json_content, "$.dns.rd")),
  dns_response_code = json_extract_scalar(json_content, "$.dns.response_code"),
  dns_type = json_extract_scalar(json_content, "$.dns.type"),
  dns_version = to_integer(json_extract_scalar(json_content, "$.dns.version")),
  http_accept = json_extract_scalar(json_content, "$.http.accept"),
  http_accept_encoding = json_extract_scalar(json_content, "$.http.accept_encoding"),
  http_accept_language = json_extract_scalar(json_content, "$.http.accept_language"),
  http_age = json_extract_scalar(json_content, "$.http.age"),
  http_authorization = json_extract_scalar(json_content, "$.http.authorization"),
  http_cache_control = json_extract_scalar(json_content, "$.http.cache_control"),
  http_connection = json_extract_scalar(json_content, "$.http.connection"),
  http_content_encoding = json_extract_scalar(json_content, "$.http.content_encoding"),
  http_cookie = json_extract_scalar(json_content, "$.http.cookie"),
  http_date = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.http.date"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  http_dnt = json_extract_scalar(json_content, "$.http.dnt"),
  http_hostname = json_extract_scalar(json_content, "$.http.hostname"),
  http_http_port = to_integer(json_extract_scalar(json_content, "$.http.http_port")),
  http_http_refer = json_extract_scalar(json_content, "$.http.http_refer"),
  http_http_response_body = json_extract_scalar(json_content, "$.http.http_response_body"),
  http_http_response_body_printable = json_extract_scalar(json_content, "$.http.http_response_body_printable"),
  http_http_user_agent = json_extract_scalar(json_content, "$.http.http_user_agent"),
  http_http2 = json_extract(json_content, "$.http.http2"),
  http_last_modified = json_extract_scalar(json_content, "$.http.last_modified"),
  http_location = json_extract_scalar(json_content, "$.http.location"),
  http_pragma = json_extract_scalar(json_content, "$.http.pragma"),
  http_redirect = json_extract_scalar(json_content, "$.http.redirect"),
  http_request_headers = json_extract_array(json_content, "$.http.request_headers"),
  http_request = json_extract(json_content, "$.http.request"),
  http_response_headers = json_extract_array(json_content, "$.http.response_headers"),
  http_response = json_extract(json_content, "$.http.response"),
  http_server = json_extract_scalar(json_content, "$.http.server"),
  http_set_cookie = json_extract_scalar(json_content, "$.http.set_cookie"),
  http_transfer_encoding = json_extract_scalar(json_content, "$.http.transfer_encoding"),
  http_url = json_extract_scalar(json_content, "$.http.url"),
  http_vary = json_extract_scalar(json_content, "$.http.vary"),
  http_version = json_extract_scalar(json_content, "$.http.version"),
  http_www_authenticate = json_extract_scalar(json_content, "$.http.www_authenticate"),
  http_x_flash_version = json_extract_scalar(json_content, "$.http.x_flash_version"),
  http_x_requested_with = json_extract_scalar(json_content, "$.http.x_requested_with"),
  http2_http_method = json_extract_scalar(json_content, "$.http2.http_method"),
  http2_http_user_agent = json_extract_scalar(json_content, "$.http2.http_user_agent"),
  http2_http2 = json_extract(json_content, "$.http2.http2"),
  http2_length = to_integer(json_extract_scalar(json_content, "$.http2.length")),
  http2_request_headers = json_extract_array(json_content, "$.http2.request_headers"),
  http2_response_headers = json_extract_array(json_content, "$.http2.response_headers"),
  http2_status = to_integer(json_extract_scalar(json_content, "$.http2.status")),
  http2_url = json_extract_scalar(json_content, "$.http2.url"),
  http2_version = json_extract_scalar(json_content, "$.http2.version"),
  tls_client = json_extract(json_content, "$.tls.client"),
  tls_ja3 = json_extract(json_content, "$.tls.ja3"),
  tls_ja3s = json_extract(json_content, "$.tls.ja3s"),
  tls_serial = json_extract_scalar(json_content, "$.tls.serial"),
  tls_server = json_extract(json_content, "$.tls.server"),
  tls_sni = json_extract_scalar(json_content, "$.tls.sni"),
  tls_version = json_extract_scalar(json_content, "$.tls.version"),
  smtp_helo = json_extract_scalar(json_content, "$.smtp.helo"),
  smtp_mail_from = json_extract_scalar(json_content, "$.smtp.mail_from"),
  smtp_rcpt_to = json_extract_array(json_content, "$.smtp.rcpt_to"),
  smb_access = json_extract_scalar(json_content, "$.smb.access"),
  smb_accessed = to_integer(json_extract_scalar(json_content, "$.smb.accessed")),
  smb_changed = to_integer(json_extract_scalar(json_content, "$.smb.changed")),
  smb_client_dialects = json_extract_scalar(json_content, "$.smb.client_dialects"),
  smb_client_guid = json_extract_scalar(json_content, "$.smb.client_guid"),
  smb_command = json_extract_scalar(json_content, "$.smb.command"),
  smb_created = to_integer(json_extract_scalar(json_content, "$.smb.created")),
  smb_dcerpc = json_extract(json_content, "$.smb.dcerpc"),
  smb_dialect = json_extract_scalar(json_content, "$.smb.dialect"),
  smb_directory = json_extract_scalar(json_content, "$.smb.directory"),
  smb_disposition = json_extract_scalar(json_content, "$.smb.disposition"),
  smb_filename = json_extract_scalar(json_content, "$.smb.filename"),
  smb_fuid = json_extract_scalar(json_content, "$.smb.fuid"),
  smb_function = json_extract_scalar(json_content, "$.smb.function"),
  smb_id = to_integer(json_extract_scalar(json_content, "$.smb.id")),
  smb_kerberos = json_extract(json_content, "$.smb.kerberos"),
  smb_max_read_size = to_integer(json_extract_scalar(json_content, "$.smb.max_read_size")),
  smb_max_write_size = to_integer(json_extract_scalar(json_content, "$.smb.max_write_size")),
  smb_modified = to_integer(json_extract_scalar(json_content, "$.smb.modified")),
  smb_named_pipe = json_extract_scalar(json_content, "$.smb.named_pipe"),
  smb_ntmlssp = json_extract(json_content, "$.smb.ntmlssp"),
  smb_rename = json_extract(json_content, "$.smb.rename"),
  smb_server_guid = json_extract_scalar(json_content, "$.smb.server_guid"),
  smb_session_id = to_integer(json_extract_scalar(json_content, "$.smb.session_id")),
  smb_set_info = json_extract(json_content, "$.smb.set_info"),
  smb_share = json_extract_scalar(json_content, "$.smb.share"),
  smb_share_type = json_extract_scalar(json_content, "$.smb.share_type"),
  smb_size = to_integer(json_extract_scalar(json_content, "$.smb.size")),
  smb_status = json_extract_scalar(json_content, "$.smb.status"),
  smb_status_code = json_extract_scalar(json_content, "$.smb.status_code"),
  smb_tree_id = to_integer(json_extract_scalar(json_content, "$.smb.tree_id")),
  nfs_filename = json_extract_scalar(json_content, "$.nfs.filename"),
  nfs_file_tx = to_boolean(json_extract_scalar(json_content, "$.nfs.file_tx")),
  nfs_hhash = json_extract_scalar(json_content, "$.nfs.hhash"),
  nfs_id = to_integer(json_extract_scalar(json_content, "$.nfs.id")),
  nfs_procedure = json_extract_scalar(json_content, "$.nfs.procedure"),
  nfs_read = json_extract(json_content, "$.nfs.read"),
  nfs_rename = json_extract(json_content, "$.nfs.rename"),
  nfs_status = json_extract_scalar(json_content, "$.nfs.status"),
  nfs_type = json_extract_scalar(json_content, "$.nfs.type"),
  nfs_version = to_integer(json_extract_scalar(json_content, "$.nfs.version")),
  nfs_write = json_extract(json_content, "$.nfs.write"),
  ftp_command = json_extract_scalar(json_content, "$.ftp.command"),
  ftp_command_data = json_extract_scalar(json_content, "$.ftp.command_data"),
  ftp_command_truncated = to_boolean(json_extract_scalar(json_content, "$.ftp.command_truncated")),
  ftp_completion_code = json_extract_array(json_content, "$.ftp.completion_code"),
  ftp_dynamic_port = to_integer(json_extract_scalar(json_content, "$.ftp.dynamic_port")),
  ftp_reply = json_extract_array(json_content, "$.ftp.reply"),
  ftp_reply_received = json_extract_scalar(json_content, "$.ftp.reply_received"),
  ftp_reply_truncated = to_boolean(json_extract_scalar(json_content, "$.ftp.reply_truncated")),
  tftp_file = json_extract_scalar(json_content, "$.tftp.file"),
  tftp_mode = json_extract_scalar(json_content, "$.tftp.mode"),
  tftp_packet = json_extract_scalar(json_content, "$.tftp.packet"),
  ssh_client = json_extract(json_content, "$.ssh.client"),
  ssh_server = json_extract(json_content, "$.ssh.server"),
  krb5_cname = json_extract_scalar(json_content, "$.krb5.cname"),
  krb5_encryption = json_extract_scalar(json_content, "$.krb5.encryption"),
  krb5_error_code = json_extract_scalar(json_content, "$.krb5.error_code"),
  krb5_failed_request = json_extract_scalar(json_content, "$.krb5.failed_request"),
  krb5_msg_type = json_extract_scalar(json_content, "$.krb5.msg_type"),
  krb5_realm = json_extract_scalar(json_content, "$.krb5.realm"),
  krb5_sname = json_extract_scalar(json_content, "$.krb5.sname"),
  krb5_weak_encryption = to_boolean(json_extract_scalar(json_content, "$.krb5.weak_encryption")),
  dhcp_assigned_ip = json_extract_scalar(json_content, "$.dhcp.assigned_ip"),
  dhcp_client_id = json_extract_scalar(json_content, "$.dhcp.client_id"),
  dhcp_client_ip = json_extract_scalar(json_content, "$.dhcp.client_ip"),
  dhcp_client_mac = json_extract_scalar(json_content, "$.dhcp.client_mac"),
  dhcp_dhcp_type = json_extract_scalar(json_content, "$.dhcp.dhcp_type"),
  dhcp_dns_servers = json_extract_scalar(json_content, "$.dhcp.dns_servers"),
  dhcp_hostname = json_extract_scalar(json_content, "$.dhcp.hostname"),
  dhcp_id = to_integer(json_extract_scalar(json_content, "$.dhcp.id")),
  dhcp_lease_time = to_integer(json_extract_scalar(json_content, "$.dhcp.lease_time")),
  dhcp_next_server_ip = json_extract_scalar(json_content, "$.dhcp.next_server_ip"),
  dhcp_relay_ip = json_extract_scalar(json_content, "$.dhcp.relay_ip"),
  dhcp_routers = json_extract_scalar(json_content, "$.dhcp.routers"),
  dhcp_subnet_mask = json_extract_scalar(json_content, "$.dhcp.subnet_mask"),
  dhcp_type = json_extract_scalar(json_content, "$.dhcp.type"),
  snmp_community = json_extract_scalar(json_content, "$.snmp.community"),
  snmp_pdu_type = json_extract_scalar(json_content, "$.snmp.pdu_type"),
  snmp_vars = json_extract_scalar(json_content, "$.snmp.vars"),
  snmp_version = to_integer(json_extract_scalar(json_content, "$.snmp.version")),
  rdp_channels = json_extract_scalar(json_content, "$.rdp.channels"),
  rdp_client = json_extract(json_content, "$.rdp.client"),
  rdp_cookie = json_extract_scalar(json_content, "$.rdp.cookie"),
  rdp_event_type = json_extract_scalar(json_content, "$.rdp.event_type"),
  rdp_tx_id = to_integer(json_extract_scalar(json_content, "$.rdp.tx_id")),
  rfb_authentication = json_extract(json_content, "$.rfb.authentication"),
  rfb_channel = json_extract_scalar(json_content, "$.rfb.channel"),
  rfb_client_protocol_version = json_extract(json_content, "$.rfb.client_protocol_version"),
  rfb_client = json_extract(json_content, "$.rfb.client"),
  rfb_cookie = json_extract_scalar(json_content, "$.rfb.cookie"),
  rfb_error_code = to_integer(json_extract_scalar(json_content, "$.rfb.error_code")),
  rfb_event_type = json_extract_scalar(json_content, "$.rfb.event_type"),
  rfb_framebuffer = json_extract(json_content, "$.rfb.framebuffer"),
  rfb_protocol = json_extract_scalar(json_content, "$.rfb.protocol"),
  rfb_reason = json_extract_scalar(json_content, "$.rfb.reason"),
  rfb_screen_shared = to_boolean(json_extract_scalar(json_content, "$.rfb.screen_shared")),
  rfb_server_protocol_version = json_extract(json_content, "$.rfb.server_protocol_version"),
  rfb_server_security_failure_reason = json_extract_scalar(json_content, "$.rfb.server_security_failure_reason"),
  rfb_server_supports = json_extract_scalar(json_content, "$.rfb.server_supports"),
  rfb_tx_id = to_integer(json_extract_scalar(json_content, "$.rfb.tx_id")),
  rfb_x509_serials = json_extract_scalar(json_content, "$.rfb.x509_serials"),
  ikev2_alg_auth = json_extract_scalar(json_content, "$.ikev2.alg_auth"),
  ikev2_alg_dh = json_extract_scalar(json_content, "$.ikev2.alg_dh"),
  ikev2_alg_enc = json_extract_scalar(json_content, "$.ikev2.alg_enc"),
  ikev2_alg_esn = json_extract_scalar(json_content, "$.ikev2.alg_esn"),
  ikev2_alg_perf = json_extract_scalar(json_content, "$.ikev2.alg_perf"),
  ikev2_errors = to_integer(json_extract_scalar(json_content, "$.ikev2.errors")),
  ikev2_exchange_type = to_integer(json_extract_scalar(json_content, "$.ikev2.exchange_type")),
  ikev2_init_spi = json_extract_scalar(json_content, "$.ikev2.init_spi"),
  ikev2_message_id = to_integer(json_extract_scalar(json_content, "$.ikev2.message_id")),
  ikev2_notify = json_extract_scalar(json_content, "$.ikev2.notify"),
  ikev2_payload = json_extract_scalar(json_content, "$.ikev2.payload"),
  ikev2_resp_spi = json_extract_scalar(json_content, "$.ikev2.resp_spi"),
  ikev2_role = json_extract_scalar(json_content, "$.ikev2.role"),
  ikev2_version_major = to_integer(json_extract_scalar(json_content, "$.ikev2.version_major")),
  ikev2_version_minor = to_integer(json_extract_scalar(json_content, "$.ikev2.version_minor")),
  sip_code = json_extract_scalar(json_content, "$.sip.code"),
  sip_method = json_extract_scalar(json_content, "$.sip.method"),
  sip_reason = json_extract_scalar(json_content, "$.sip.reason"),
  sip_request_line = json_extract_scalar(json_content, "$.sip.request_line"),
  sip_response_line = json_extract_scalar(json_content, "$.sip.response_line"),
  sip_uri = json_extract_scalar(json_content, "$.sip.uri"),
  sip_version = json_extract_scalar(json_content, "$.sip.version"),
  dnp3_application = json_extract(json_content, "$.dnp3.application"),
  dnp3_control = json_extract(json_content, "$.dnp3.control"),
  dnp3_dst = to_integer(json_extract_scalar(json_content, "$.dnp3.dst")),
  dnp3_iin = json_extract(json_content, "$.dnp3.iin"),
  dnp3_src = to_integer(json_extract_scalar(json_content, "$.dnp3.src")),
  dnp3_type = json_extract_scalar(json_content, "$.dnp3.type"),
  dcerpc_call_id = to_integer(json_extract_scalar(json_content, "$.dcerpc.call_id")),
  dcerpc_interfaces = json_extract(json_content, "$.dcerpc.interfaces"),
  dcerpc_req = json_extract(json_content, "$.dcerpc.req"),
  dcerpc_request = json_extract_scalar(json_content, "$.dcerpc.request"),
  dcerpc_res = json_extract(json_content, "$.dcerpc.res"),
  dcerpc_response = json_extract_scalar(json_content, "$.dcerpc.response"),
  dcerpc_rpc_version = json_extract_scalar(json_content, "$.dcerpc.rpc_version"),
  mqtt_connack = json_extract(json_content, "$.mqtt.connack"),
  mqtt_pubcomp = json_extract(json_content, "$.mqtt.pubcomp"),
  mqtt_publish = json_extract(json_content, "$.mqtt.publish"),
  mqtt_pubrec = json_extract(json_content, "$.mqtt.pubrec"),
  mqtt_pubrel = json_extract(json_content, "$.mqtt.pubrel"),
  metadata_flowbits = json_extract_array(json_content, "$.metadata.flowbits"),
  beacon_active = to_boolean(json_extract_scalar(json_content, "$.beacon.active")),
  beacon_hostname_resolution = json_extract_scalar(json_content, "$.beacon.hostname_resolution"),
  beacon_id = json_extract_scalar(json_content, "$.beacon.id"),
  beacon_mean_time_interval = to_integer(json_extract_scalar(json_content, "$.beacon.mean_time_interval")),
  beacon_possible_cnc = json_extract_scalar(json_content, "$.beacon.possible_cnc"),
  beacon_session_count = to_integer(json_extract_scalar(json_content, "$.beacon.session_count")),
  beacon_type = json_extract_scalar(json_content, "$.beacon.type"),
  dga_dga_count = to_integer(json_extract_scalar(json_content, "$.dga.dga_count")),
  dga_dga_ratio = to_integer(json_extract_scalar(json_content, "$.dga.dga_ratio")),
  dga_malware_behavior_confidence = to_integer(json_extract_scalar(json_content, "$.dga.malware_behavior_confidence")),
  dga_nx_domain_count = to_integer(json_extract_scalar(json_content, "$.dga.nx_domain_count")),
  dga_top_DGA = json_extract_array(json_content, "$.dga.top_DGA"),
  ioc_campaigns = json_extract_scalar(json_content, "$.ioc.campaigns"),
  ioc_case_id = json_extract_scalar(json_content, "$.ioc.case_id"),
  ioc_categories = json_extract_array(json_content, "$.ioc.categories"),
  ioc_creation_date = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.ioc.creation_date"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  ioc_description = json_extract_scalar(json_content, "$.ioc.description"),
  ioc_external_links = json_extract_array(json_content, "$.ioc.external_links"),
  ioc_families = json_extract_array(json_content, "$.ioc.families"),
  ioc_id = json_extract_scalar(json_content, "$.ioc.id"),
  ioc_kill_chain_phases = json_extract_array(json_content, "$.ioc.kill_chain_phases"),
  ioc_meta_data = json_extract(json_content, "$.ioc.meta_data"),
  ioc_package_date = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.ioc.package_date"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  ioc_relations = json_extract_array(json_content, "$.ioc.relations"),
  ioc_signature = json_extract_scalar(json_content, "$.ioc.signature"),
  ioc_tags = json_extract_array(json_content, "$.ioc.tags"),
  ioc_targeted_countries = json_extract_array(json_content, "$.ioc.targeted_countries"),
  ioc_targeted_organizations = json_extract_array(json_content, "$.ioc.targeted_organizations"),
  ioc_targeted_platforms = json_extract_array(json_content, "$.ioc.targeted_platforms"),
  ioc_targeted_sectors = json_extract_array(json_content, "$.ioc.targeted_sectors"),
  ioc_threat_actor = json_extract_array(json_content, "$.ioc.threat_actor"),
  ioc_tlp = json_extract_scalar(json_content, "$.ioc.tlp"),
  ioc_ttp = json_extract_array(json_content, "$.ioc.ttp"),
  ioc_type = json_extract_scalar(json_content, "$.ioc.type"),
  ioc_updated_date = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.ioc.updated_date"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  ioc_usage_mode = json_extract_scalar(json_content, "$.ioc.usage_mode"),
  ioc_value = json_extract_scalar(json_content, "$.ioc.value"),
  ioc_vulnerabilities = json_extract_array(json_content, "$.ioc.vulnerabilities"),
  malcore_analyzed_clean = to_integer(json_extract_scalar(json_content, "$.malcore.analyzed_clean")),
  malcore_analyzed_error = to_integer(json_extract_scalar(json_content, "$.malcore.analyzed_error")),
  malcore_analyzed_infected = to_integer(json_extract_scalar(json_content, "$.malcore.analyzed_infected")),
  malcore_analyzed_other = to_integer(json_extract_scalar(json_content, "$.malcore.analyzed_other")),
  malcore_analyzed_suspicious = to_integer(json_extract_scalar(json_content, "$.malcore.analyzed_suspicious")),
  malcore_analyzers_up = to_integer(json_extract_scalar(json_content, "$.malcore.analyzers_up")),
  malcore_code = to_integer(json_extract_scalar(json_content, "$.malcore.code")),
  malcore_detail_scan_time = to_integer(json_extract_scalar(json_content, "$.malcore.detail_scan_time")),
  malcore_detail_threat_found = json_extract_scalar(json_content, "$.malcore.detail_threat_found"),
  malcore_detail_wait_time = to_integer(json_extract_scalar(json_content, "$.malcore.detail_wait_time")),
  malcore_engine_id = json_extract(json_content, "$.malcore.engine_id"),
  malcore_engines_last_update_date = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.malcore.engines_last_update_date"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  malcore_file_type = json_extract_scalar(json_content, "$.malcore.file_type"),
  malcore_file_type_description = json_extract_scalar(json_content, "$.malcore.file_type_description"),
  malcore_magic_details = json_extract_scalar(json_content, "$.malcore.magic_details"),
  malcore_processing_time = to_integer(json_extract_scalar(json_content, "$.malcore.processing_time")),
  malcore_reporting_token = json_extract_scalar(json_content, "$.malcore.reporting_token"),
  malcore_state = json_extract_scalar(json_content, "$.malcore.state"),
  malcore_total_found = json_extract_scalar(json_content, "$.malcore.total_found"),
  malicious_powershell_id = json_extract_scalar(json_content, "$.malicious_powershell.id"),
  malicious_powershell_proba_obfuscated = to_integer(json_extract_scalar(json_content, "$.malicious_powershell.proba_obfuscated")),
  malicious_powershell_sample_id = json_extract_scalar(json_content, "$.malicious_powershell.sample_id"),
  malicious_powershell_score = to_integer(json_extract_scalar(json_content, "$.malicious_powershell.score")),
  malicious_powershell_score_details = json_extract(json_content, "$.malicious_powershell.score_details"),
  matched_event_id = json_extract_scalar(json_content, "$.matched_event.id"),
  nba_action = json_extract_scalar(json_content, "$.nba.action"),
  nba_category = json_extract_scalar(json_content, "$.nba.category"),
  nba_gid = to_integer(json_extract_scalar(json_content, "$.nba.gid")),
  nba_metadata = json_extract(json_content, "$.nba.metadata"),
  nba_packet = json_extract_scalar(json_content, "$.nba.packet"),
  nba_payload = json_extract_scalar(json_content, "$.nba.payload"),
  nba_payload_printable = json_extract_scalar(json_content, "$.nba.payload_printable"),
  nba_rev = to_integer(json_extract_scalar(json_content, "$.nba.rev")),
  nba_signature = json_extract_scalar(json_content, "$.nba.signature"),
  nba_signature_id = to_integer(json_extract_scalar(json_content, "$.nba.signature_id")),
  nba_stream = to_integer(json_extract_scalar(json_content, "$.nba.stream")),
  ransomware_alert_threshold = to_integer(json_extract_scalar(json_content, "$.ransomware.alert_threshold")),
  ransomware_malicious_behavior_confidence = to_integer(json_extract_scalar(json_content, "$.ransomware.malicious_behavior_confidence")),
  ransomware_session_score = to_integer(json_extract_scalar(json_content, "$.ransomware.session_score")),
  shellcode_analysis = json_extract_array(json_content, "$.shellcode.analysis"),
  shellcode_encodings = json_extract_array(json_content, "$.shellcode.encodings"),
  shellcode_id = json_extract_scalar(json_content, "$.shellcode.id"),
  shellcode_sample_id = json_extract_scalar(json_content, "$.shellcode.sample_id"),
  shellcode_sub_type = json_extract_scalar(json_content, "$.shellcode.sub_type"),
  sigflow_action = json_extract_scalar(json_content, "$.sigflow.action"),
  sigflow_category = json_extract_scalar(json_content, "$.sigflow.category"),
  sigflow_gid = to_integer(json_extract_scalar(json_content, "$.sigflow.gid")),
  sigflow_metadata = json_extract(json_content, "$.sigflow.metadata"),
  sigflow_packet = json_extract_scalar(json_content, "$.sigflow.packet"),
  sigflow_packet_info = json_extract(json_content, "$.sigflow.packet_info"),
  sigflow_payload = json_extract_scalar(json_content, "$.sigflow.payload"),
  sigflow_payload_printable = json_extract_scalar(json_content, "$.sigflow.payload_printable"),
  sigflow_rev = to_integer(json_extract_scalar(json_content, "$.sigflow.rev")),
  sigflow_signature = json_extract_scalar(json_content, "$.sigflow.signature"),
  sigflow_signature_id = to_integer(json_extract_scalar(json_content, "$.sigflow.signature_id")),
  sigflow_stream = to_integer(json_extract_scalar(json_content, "$.sigflow.stream")),
  file_file_id = to_integer(json_extract_scalar(json_content, "$.file.file_id")),
  file_gaps = to_boolean(json_extract_scalar(json_content, "$.file.gaps")),
  file_hash = json_extract(json_content, "$.file.hash"),
  file_magic = json_extract_scalar(json_content, "$.file.magic"),
  file_name = json_extract_scalar(json_content, "$.file.name"),
  file_sid = to_integer(json_extract_scalar(json_content, "$.file.sid")),
  file_size = to_integer(json_extract_scalar(json_content, "$.file.size")),
  file_state = json_extract_scalar(json_content, "$.file.state"),
  file_stored = to_boolean(json_extract_scalar(json_content, "$.file.stored")),
  file_tlsh = json_extract_scalar(json_content, "$.file.tlsh"),
  file_tx_id = to_integer(json_extract_scalar(json_content, "$.file.tx_id")),
  files_filename = json_extract_scalar(json_content, "$.files.filename"),
  files_gaps = to_boolean(json_extract_scalar(json_content, "$.files.gaps")),
  files_magic = json_extract_scalar(json_content, "$.files.magic"),
  files_sha256 = json_extract_scalar(json_content, "$.files.sha256"),
  files_sid = json_extract_array(json_content, "$.files.sid"),
  files_size = to_integer(json_extract_scalar(json_content, "$.files.size")),
  files_state = json_extract_scalar(json_content, "$.files.state"),
  files_stored = to_boolean(json_extract_scalar(json_content, "$.files.stored")),
  files_tx_id = to_integer(json_extract_scalar(json_content, "$.files.tx_id")),
  tcp_ack = to_boolean(json_extract_scalar(json_content, "$.tcp.ack")),
  tcp_cwr = to_boolean(json_extract_scalar(json_content, "$.tcp.cwr")),
  tcp_ecn = to_boolean(json_extract_scalar(json_content, "$.tcp.ecn")),
  tcp_fin = to_boolean(json_extract_scalar(json_content, "$.tcp.fin")),
  tcp_psh = to_boolean(json_extract_scalar(json_content, "$.tcp.psh")),
  tcp_rst = to_boolean(json_extract_scalar(json_content, "$.tcp.rst")),
  tcp_syn = to_boolean(json_extract_scalar(json_content, "$.tcp.syn")),
  tcp_tch = to_boolean(json_extract_scalar(json_content, "$.tcp.tch")),
  tcp_tcp_flags = json_extract_scalar(json_content, "$.tcp.tcp_flags"),
  flow_age = to_integer(json_extract_scalar(json_content, "$.flow.age")),
  flow_alerted = to_boolean(json_extract_scalar(json_content, "$.flow.alerted")),
  flow_bytes_toclient = to_integer(json_extract_scalar(json_content, "$.flow.bytes_toclient")),
  flow_bytes_toserver = to_integer(json_extract_scalar(json_content, "$.flow.bytes_toserver")),
  flow_end = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.flow.end"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  flow_pkts_toclient = to_integer(json_extract_scalar(json_content, "$.flow.pkts_toclient")),
  flow_pkts_toserver = to_integer(json_extract_scalar(json_content, "$.flow.pkts_toserver")),
  flow_reason = json_extract_scalar(json_content, "$.flow.reason"),
  flow_start = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.flow.start"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  flow_state = json_extract_scalar(json_content, "$.flow.state"),
  destination_ip = json_extract_scalar(json_content, "$.destination.ip"),
  destination_mac = json_extract_scalar(json_content, "$.destination.mac"),
  destination_port = to_integer(json_extract_scalar(json_content, "$.destination.port")),
  source_ip = json_extract_scalar(json_content, "$.source.ip"),
  source_mac = json_extract_scalar(json_content, "$.source.mac"),
  source_port = to_integer(json_extract_scalar(json_content, "$.source.port")),
  url_domain = json_extract_scalar(json_content, "$.url.domain"),
  url_full = json_extract_scalar(json_content, "$.url.full"),
  url_path = json_extract_scalar(json_content, "$.url.path"),
  event_category = json_extract_array(json_content, "$.event.category"),
  event_created = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.event.created"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  event_dataset = json_extract_scalar(json_content, "$.event.dataset"),
  event_end = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.event.end"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  event_id = json_extract_scalar(json_content, "$.event.id"),
  event_kind = json_extract_scalar(json_content, "$.event.kind"),
  event_module = json_extract_scalar(json_content, "$.event.module"),
  event_outcome = json_extract_scalar(json_content, "$.event.outcome"),
  event_severity = to_integer(json_extract_scalar(json_content, "$.event.severity")),
  event_severity_human = json_extract_scalar(json_content, "$.event.severity_human"),
  event_start = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.event.start"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  observer_gcap = json_extract(json_content, "$.observer.gcap"),
  observer_hostname = json_extract_scalar(json_content, "$.observer.hostname"),
  observer_log_format_version = json_extract_scalar(json_content, "$.observer.log_format_version"),
  observer_product = json_extract_scalar(json_content, "$.observer.product"),
  observer_uuid = json_extract_scalar(json_content, "$.observer.uuid"),
  observer_vendor = json_extract_scalar(json_content, "$.observer.vendor"),
  observer_version = json_extract_scalar(json_content, "$.observer.version"),
  network_community_id = json_extract_scalar(json_content, "$.network.community_id"),
  network_flow_id = to_integer(json_extract_scalar(json_content, "$.network.flow_id")),
  network_protocol = json_extract_scalar(json_content, "$.network.protocol"),
  network_timestamp = parse_timestamp("%FT%H:%M:%E*S", arrayindex(regextract(json_extract_scalar(json_content, "$.network.timestamp"), "(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6})"),0)),
  network_transport = json_extract_scalar(json_content, "$.network.transport"),
  network_tx_id = to_integer(json_extract_scalar(json_content, "$.network.tx_id")),
  network_vlan = json_extract(json_content, "$.network.vlan"),
  ether_dest_macs = json_extract_scalar(json_content, "$.ether.dest_macs"),
  ether_src_macs = json_extract_scalar(json_content, "$.ether.src_macs"),
  _time = network_timestamp
| fields -json_content;
